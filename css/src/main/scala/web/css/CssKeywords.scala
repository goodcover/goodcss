package web.css

trait CssKeywords {

  object kw extends CssKeywords {
    // Keywords that conflict with property or function names
    val bottom  = kw"bottom"
    val left    = kw"left"
    val outline = kw"outline"
    val repeat  = kw"repeat"
    val right   = kw"right"
    val top     = kw"top"
  }

  val _wait        = kw"wait"
  val absolute     = kw"absolute"
  val appearance   = kw"appearance"
  val auto         = kw"auto"
  val autoFill     = kw"auto-fill"
  val autoFit      = kw"auto-fit"
  val baseline     = kw"baseline"
  val block        = kw"block"
  val both         = kw"both"
  val breakWord    = kw"break-word"
  val capitalize   = kw"capitalize"
  val center       = kw"center"
  val column       = kw"column"
  val contentBox   = kw"content-box"
  val currentcolor = kw"currentcolor"
  val default      = kw"default"
  val dense        = kw"dense"
  val easeInOut    = kw"ease-in-out"
  val end          = kw"end"
  val fitContent   = kw"fit-content"
  val fixed        = kw"fixed"
  val flex         = kw"flex"
  val flexEnd      = kw"flex-end"
  val flexStart    = kw"flex-start"
  val grid         = kw"grid"
  val hidden       = kw"hidden"
  val infinite     = kw"infinite"
  val inherit      = kw"inherit"
  val initial      = kw"initial"
  val inline       = kw"inline"
  val inlineBlock  = kw"inline-block"
  val inlineFlex   = kw"inline-flex"
  val inlineGrid   = kw"inline-grid"
  val lineThrough  = kw"line-through"
  val linear       = kw"linear"
  val lowercase    = kw"lowercase"
  val maxContent   = kw"max-content"
  val middle       = kw"middle"
  val minContent   = kw"min-content"
  val noRepeat     = kw"no-repeat"
  val none         = kw"none"
  val normal       = kw"normal"
  val notAllowed   = kw"not-allowed"
  val nowrap       = kw"nowrap"
  val pointer      = kw"pointer"
  val pre          = kw"pre"
  val preWrap      = kw"pre-wrap"
  val relative     = kw"relative"
  val row          = kw"row"
  val rowReverse   = kw"row-reverse"
  val selfEnd      = kw"self-end"
  val selfStart    = kw"self-start"
  val solid        = kw"solid"
  val spaceAround  = kw"space-around"
  val spaceBetween = kw"space-between"
  val spaceEvenly  = kw"space-evenly"
  val span         = kw"span"
  val start        = kw"start"
  val static       = kw"static"
  val sticky       = kw"sticky"
  val stretch      = kw"stretch"
  val textBottom   = kw"text-bottom"
  val transparent  = kw"transparent"
  val underline    = kw"underline"
  val unset        = kw"unset"
  val uppercase    = kw"uppercase"
  val visible      = kw"visible"
  val wrap         = kw"wrap"

}
